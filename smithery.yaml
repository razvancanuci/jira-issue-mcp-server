runtime: "node"
startCommand:
  type: "stdio"
  commandFunction: |
    (config) => ({
      command: 'npx',
      args: ['tsx', 'src/index.ts'],
      env: {
        ATLASSIAN_CLIENT_ID: config.atlassianClientId,
        ATLASSIAN_CLIENT_SECRET: config.atlassianClientSecret,
        REDIS_HOST: config.redisHost,
        ELASTIC_API_KEY: config.elasticApiKey,
        ELASTIC_URL: config.elasticUrl,
        SERVER_DOMAIN: config.serverDomain,
        BYPASS_AUTH: config.bypassAuth ? 'true' : 'false'
      }
    })
  configSchema:
    type: "object"
    properties:
      atlassianClientId:
        type: "string"
        description: "Client ID for Atlassian OAuth connection"
        default: "client-id"
      atlassianClientSecret:
        type: "string"
        description: "Client Secret for Atlassian OAuth connection"
        default: "client-secret"
      redisHost:
        type: "string"
        description: "Redis host URL (default is localhost). PORT is 6379 by default"
        default: "localhost"
      elasticUrl:
        type: "string"
        description: "URL for Elastic logging (optional). The default value is http://localhost:9200"
        default: "http://localhost:9200"
      elasticApiKey:
        type: "string"
        description: "API KEY for logging to Elastic"
        default: "api-key"
      serverDomain:
        type: "string"
        default: "http://localhost:3000"
      bypassAuth:
        type: "boolean"
        description: "Skip OAuth for testing/demo mode"
        default: true
  exampleConfig:
    atlassianClientId: "your-oauth-client-id"
    atlassianClientSecret: "your-oauth-client-secret"
    redisUrl: "localhost"
    elasticApiKey: "your-elastic-api-key"
    elasticUrl: "your-elastic-url"
    serverDomain: "http://localhost:3000"